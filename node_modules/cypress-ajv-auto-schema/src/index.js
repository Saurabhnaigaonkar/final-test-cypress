// src/index.js
const {
  resolveSchemasDir,
  createSchemaFromJson,
  saveSchema,
  schemaExists,
  schemaFilePath
} = require('./utils');

// Plugin tasks (Node side)
function cypressJsonSchemaPlugin(on, config) {
  const schemasDir = resolveSchemasDir(config && config.env);

  on('task', {
    cjs_generateSchema({ json, schemaName }) {
      if (!json || !schemaName) {
        throw new Error('cjs_generateSchema requires { json, schemaName }');
      }
      let schema = createSchemaFromJson(json, schemaName);
      // remove $schema field for validation of schema using cypress-ajv-schema-validator
      if (schema.$schema) {
        delete schema.$schema;
      }
      const filePath = saveSchema(schemasDir, schemaName, schema);
      return { filePath, schema };
    },

    cjs_schemaExists({ schemaName }) {
      if (!schemaName) throw new Error('cjs_schemaExists requires { schemaName }');
      return schemaExists(schemasDir, schemaName);
    },

    cjs_schemaPath({ schemaName }) {
      if (!schemaName) throw new Error('cjs_schemaPath requires { schemaName }');
      return schemaFilePath(schemasDir, schemaName);
    }
  });

  return config;
}

module.exports = cypressJsonSchemaPlugin;
